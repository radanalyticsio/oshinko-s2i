#!/bin/sh

set -e

SCRIPT_DIR=$(dirname $0)
ADDED_DIR=${SCRIPT_DIR}/added
ARTIFACTS_DIR=/tmp/artifacts

# Change the permissions on /etc/passwd so that anonymous user
# can be added to satisfy Spark
chgrp root /etc/passwd && chmod ug+rw /etc/passwd

# Add bootstrap entrypoint to $APP_ROOT/etc
mkdir -p $APP_ROOT/etc
cp $ADDED_DIR/etc/bootstrap.sh $APP_ROOT/etc
chown -R 185:0 $APP_ROOT/etc && chmod g+rwX -R $APP_ROOT/etc

# Add oshinko CLI in $APP_ROOT/src
# If there is a zero-length oshinko-cli tarball, find the verison in the
# name and download from github
mkdir -p $APP_ROOT/src
cp $ADDED_DIR/utils/* $APP_ROOT/src
fullname=$(find $ARTIFACTS_DIR -name oshinko_v[0-9.]*_linux_amd64\.tar\.gz)
if ! [ -s "$fullname" ]; then
    oshinko=$(basename $fullname)
    version=$(echo $oshinko | cut -d '_' -f2)
    wget https://github.com/radanalyticsio/oshinko-cli/releases/download/$version/$oshinko -O $fullname
fi
cp $fullname $APP_ROOT/src
pushd $APP_ROOT/src
tar -zxf $(basename $fullname)
mv oshinko_linux_amd64/oshinko oshinko
rm -rf oshinko_linux_amd64 $(basename $fullname)
popd
chown -R 185:0 $APP_ROOT/src && chmod g+rwX -R $APP_ROOT/src

# Set up a place for spark to go
# We'll also stage our default spark config files here
# so that when spark is installed they can be copied over
# if the spark tarball itself does not include files of the same name
# (ie, "copy if not overwrite")
if ! [ -d $SPARK_INSTALL ]; then
    mkdir -p $SPARK_INSTALL
    mv $ADDED_DIR/conf $SPARK_INSTALL
    chown -R 185:0 $SPARK_INSTALL && chmod -R g+rwX $SPARK_INSTALL
    ln -sfn $SPARK_INSTALL/distro /opt/spark
fi

# Add the s2i script files.
# Include a new assemble that loops over numbered assembles
# after installing spark if necessary. Move the inherited
# assemble to 000-assemble to run first.
mv $STI_SCRIPTS_PATH/assemble $STI_SCRIPTS_PATH/000-assemble
cp $ADDED_DIR/s2i/* $STI_SCRIPTS_PATH
