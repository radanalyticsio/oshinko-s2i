package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/radanalyticsio/oshinko-rest/models"
)

// UpdateSingleClusterReader is a Reader for the UpdateSingleCluster structure.
type UpdateSingleClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSingleClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewUpdateSingleClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateSingleClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewUpdateSingleClusterAccepted creates a UpdateSingleClusterAccepted with default headers values
func NewUpdateSingleClusterAccepted() *UpdateSingleClusterAccepted {
	return &UpdateSingleClusterAccepted{}
}

/*UpdateSingleClusterAccepted handles this case with default header values.

Cluster update response
*/
type UpdateSingleClusterAccepted struct {
	Payload *models.SingleCluster
}

func (o *UpdateSingleClusterAccepted) Error() string {
	return fmt.Sprintf("[PUT /clusters/{name}][%d] updateSingleClusterAccepted  %+v", 202, o.Payload)
}

func (o *UpdateSingleClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SingleCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSingleClusterDefault creates a UpdateSingleClusterDefault with default headers values
func NewUpdateSingleClusterDefault(code int) *UpdateSingleClusterDefault {
	return &UpdateSingleClusterDefault{
		_statusCode: code,
	}
}

/*UpdateSingleClusterDefault handles this case with default header values.

Unexpected error
*/
type UpdateSingleClusterDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update single cluster default response
func (o *UpdateSingleClusterDefault) Code() int {
	return o._statusCode
}

func (o *UpdateSingleClusterDefault) Error() string {
	return fmt.Sprintf("[PUT /clusters/{name}][%d] updateSingleCluster default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateSingleClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
