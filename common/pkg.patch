diff --git a/pkg/cmd/cli/cmd/auth.go b/pkg/cmd/cli/cmd/auth.go
index 79700b3..2872c4c 100644
--- a/pkg/cmd/cli/cmd/auth.go
+++ b/pkg/cmd/cli/cmd/auth.go
@@ -279,7 +279,7 @@ func (o *AuthOptions) gatherAuthInfo() error {
 				o.Username = me.Name
 				o.Config = clientConfig
 
-				fmt.Fprintf(o.Out, "Logged into %q as %q using the token provided.\n\n", o.Config.Host, o.Username)
+				// fmt.Fprintf(o.Out, "Logged into %q as %q using the token provided.\n\n", o.Config.Host, o.Username)
 				return nil
 			}
 
@@ -293,7 +293,7 @@ func (o *AuthOptions) gatherAuthInfo() error {
 		return fmt.Errorf("The token is not provided.\n\n")
 	}
 
-	fmt.Fprint(o.Out, "Login successful.\n\n")
+	// fmt.Fprint(o.Out, "Login successful.\n\n")
 
 	return nil
 }
@@ -317,16 +317,16 @@ func (o *AuthOptions) gatherProjectInfo() error {
 
 	switch len(projectsItems) {
 	case 0:
-		fmt.Fprintf(o.Out, `You don't have any projects. You can try to create a new project, by running
+	//	fmt.Fprintf(o.Out, `You don't have any projects. You can try to create a new project, by running
 
-    $ oc new-project <projectname>
+   // $ oc new-project <projectname>
 
-`)
+//`)
 		o.Project = ""
 
 	case 1:
 		o.Project = projectsItems[0].Name
-		fmt.Fprintf(o.Out, "Using project %q.\n", o.Project)
+		// fmt.Fprintf(o.Out, "Using project %q.\n", o.Project)
 
 	default:
 		projects := sets.String{}
@@ -349,16 +349,16 @@ func (o *AuthOptions) gatherProjectInfo() error {
 		}
 		o.Project = current.Name
 
-		fmt.Fprintf(o.Out, "You have access to the following projects and can switch between them with 'oc project <projectname>':\n\n")
-		for _, p := range projects.List() {
-			if o.Project == p {
-				fmt.Fprintf(o.Out, "  * %s (current)\n", p)
-			} else {
-				fmt.Fprintf(o.Out, "  * %s\n", p)
-			}
-		}
-		fmt.Fprintln(o.Out)
-		fmt.Fprintf(o.Out, "Using project %q.\n", o.Project)
+		//fmt.Fprintf(o.Out, "You have access to the following projects and can switch between them with 'oc project <projectname>':\n\n")
+		//for _, p := range projects.List() {
+		//	if o.Project == p {
+		//		fmt.Fprintf(o.Out, "  * %s (current)\n", p)
+		//	} else {
+		//		fmt.Fprintf(o.Out, "  * %s\n", p)
+		//	}
+		//}
+		//fmt.Fprintln(o.Out)
+		//fmt.Fprintf(o.Out, "Using project %q.\n", o.Project)
 	}
 
 	return nil
diff --git a/pkg/cmd/cli/cmd/get.go b/pkg/cmd/cli/cmd/get.go
index 2d51ec9..e6fe26b 100644
--- a/pkg/cmd/cli/cmd/get.go
+++ b/pkg/cmd/cli/cmd/get.go
@@ -86,7 +86,7 @@ func (o *CmdOptions) RunClusters() error {
 			}
 		}
 		if(!clusterExist){
-			msg += fmt.Sprintf(linebreak+asterisk+"There are no clusters with name %s", o.Name)
+			//msg += fmt.Sprintf(linebreak+asterisk+"There are no clusters with name %s", o.Name)
 		}
 		fmt.Println(msg)
 		return nil
