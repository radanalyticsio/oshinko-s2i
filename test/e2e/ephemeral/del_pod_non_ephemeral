#!/bin/bash

function del_pod_non_ephemeral() {
    echo running pod_test_non_ephemeral
    set_defaults
    set_long_running
    set_test_mode

    # if there's an arg it's a cluster name
    if [ "$#" -eq 0 ]; then
        run_app
    else
        run_app $1
    fi

    os::cmd::try_until_text 'oc logs dc/bob' "Running Spark" $((5*minute))

    os::cmd::try_until_success 'oc get dc "$MASTER_DC"' $((2*minute))
    os::cmd::try_until_success 'oc get dc "$WORKER_DC"'

    # Record the name of the pod for the driver
    DRIVER=$(oc get pod -l deploymentconfig=bob --template='{{index .items 0 "metadata" "name"}}')

    os::cmd::expect_success 'oc delete pod "$DRIVER"'
    os::cmd::try_until_text 'oc logs "$DRIVER"' 'cluster is not ephemeral'
    os::cmd::try_until_failure 'oc get pod "$DRIVER"'

    # There should have been a new pod spun up by the dc, and it should have found the cluster
    os::cmd::try_until_text 'oc logs dc/bob' 'Found cluster'

    cleanup_app
    cleanup_cluster
}
